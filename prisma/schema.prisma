generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ProductToTag {
  A Int
  B Int

  @@unique([A, B], map: "_ProductToTag_AB_unique")
  @@index([B], map: "_ProductToTag_B_index")
  @@map("_ProductToTag")
}

model cart_items {
  id          Int      @id @default(autoincrement())
  cartId      Int
  productSlug String
  quantity    Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime

  @@unique([productSlug, cartId])
  @@index([cartId])
}

model carts {
  id         Int      @id @default(autoincrement())
  username   String   @unique @db.VarChar(100)
  totalPrice Int      @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime
}

model categories {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(100)
  slug      String   @unique @db.VarChar(100)
  createdAt DateTime @default(now())
  updatedAt DateTime
}

model feedbacks {
  id          Int      @id @default(autoincrement())
  username    String?
  guestId     String?
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime
}

model likes {
  id          Int      @id @default(autoincrement())
  productSlug String
  username    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime

  @@unique([productSlug, username])
  @@index([username])
}

model order_items {
  id          Int      @id @default(autoincrement())
  orderId     String
  productSlug String?
  productName String   @db.VarChar(100)
  price       Int
  quantity    Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime

  @@index([orderId])
  @@index([productSlug])
}

model orders {
  id               String   @id
  username         String?
  name             String?
  guestId          String?
  email            String?
  phone            String   @db.VarChar(25)
  status           String   @default("uncomplete") @db.VarChar(50)
  transactionToken String?
  total            Int
  subTotal         Int
  createdAt        DateTime @default(now())
  updatedAt        DateTime

  @@index([username])
}

model payments {
  id            Int      @id @default(autoincrement())
  status        String   @default("unpaid") @db.VarChar(50)
  method        String?  @db.VarChar(50)
  name          String
  signatureKey  String?
  transactionId String?
  store         String?
  currency      String?
  username      String?
  guestId       String?
  amount        Int
  orderId       String   @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime
}

model products {
  id            Int      @id @default(autoincrement())
  name          String   @db.VarChar(100)
  slug          String   @unique @db.VarChar(100)
  image         String   @default("https://res.cloudinary.com/dk9bcf16t/image/upload/v1699505599/default_v5bzrz.jpg") @db.VarChar(255)
  price         Int
  averageRating Float?
  description   String?
  ingredients   String?
  categorySlug  String
  createdAt     DateTime @default(now())
  updatedAt     DateTime

  @@index([categorySlug])
}

model profiles {
  id      Int     @id @default(autoincrement())
  name    String  @db.VarChar(100)
  address String? @db.VarChar(100)
  avatar  String  @default("avatar-default.jpg") @db.VarChar(100)
  userId  Int     @unique
}

model reviews {
  id          Int      @id @default(autoincrement())
  productSlug String
  username    String
  description String?
  rating      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime

  @@unique([productSlug, username])
  @@index([username])
}

model shipments {
  id         Int       @id @default(autoincrement())
  orderId    String    @unique
  address    String    @db.VarChar(100)
  city       String    @db.VarChar(100)
  detail     String
  state      String    @db.VarChar(100)
  postalCode String    @db.VarChar(25)
  status     String    @default("onprogress") @db.VarChar(50)
  method     String    @db.VarChar(50)
  name       String    @db.VarChar(100)
  phone      String    @db.VarChar(25)
  cost       Int       @default(0)
  arrivedAt  DateTime?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime
}

model tags {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(100)
  slug      String   @unique @db.VarChar(100)
  createdAt DateTime @default(now())
  updatedAt DateTime
}

model tags_on_products {
  id        Int      @id @default(autoincrement())
  productId Int?
  tagId     Int
  createdAt DateTime @default(now())

  @@unique([productId, tagId])
  @@index([productId])
  @@index([tagId])
}

model users {
  id          Int    @id @default(autoincrement())
  username    String @unique @db.VarChar(100)
  phonenumber String @db.VarChar(100)
  password    String @db.VarChar(100)
}
